(import iso8601ForFs)

(const agent (new atproto.default.BskyAgent { service: "https://bsky.social/"}))

(const myDid "did:plc:ccikl4jnjjzzap7ifyvce7d7")

(const
  password
  (async.await
    (read.default { prompt: "Pass: ", silent: true })))

(annotate
  "Break line after the prompt"
  (console.log "\n"))

(async.await
  (agent.login
    { identifier: myDid, password }))

(const
  config
  (async.await
    (async.scope
      (JSON.parse
        (async.await
          (fs.readFile
            (path.join
              cu$directoryOfThisFile
              ".."
              "save-posts-config.json")))))))

(const statePath (path.join config.outDirectory "state.json"))

(const
  lastState
  (async.await
    (async.scope
      (try
        (return
          (JSON.parse
            (async.await
              (fs.readFile statePath))))
        catch e
        (when (notEquals e.code "ENOENT") (throw e)))
      (return { indexedAt: 0 }))))
(const savedIndexedAt (new Date lastState.indexedAt))

(console.log { savedIndexedAt })

(const
  isNotYetSaved
  (fn (p)
    (const indexedAt (new Date p.indexedAt))
    (isGreaterThan indexedAt savedIndexedAt)))

(let cursor none)
(const
  posts
  (async.await
    (async.scope
      (const result [])
      (while true
        (note "TODO: check the result")
        (const
          res
          (async.await
            (agent.getAuthorFeed { actor: myDid, limit: 100, cursor })))
        (assign cursor res.data.cursor)
        (console.log { cursor })
        (forEach p res.data.feed
          (when (not (isNotYetSaved p.post))
            (return result))
          (array.push result p.post))
        (when (isNone cursor)
          (return result))))))

(const latestPost (array.first posts))

(when (isGreaterThanOrEquals posts.length 1)
  (const
    outName
    (iso8601ForFs.toFileName latestPost.indexedAt ".json"))
  (const
    outJson (JSON.stringify posts none 2))
  (console.log "Saving" posts.length "posts on" outName)
  (async.await
    (fs.writeFile (path.join config.outDirectory outName) outJson))

  (const lastIndexedAt latestPost.indexedAt)
  (async.await
    (fs.writeFile
      statePath
      (JSON.stringify { indexedAt: lastIndexedAt } none 2))))
